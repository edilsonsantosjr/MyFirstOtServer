<?php 
	class Profile_model extends Model {
		
		public function __construct() {
			parent::__construct();
			$this->load->database();
		}
		
		public function load($name, $id = false) {
			if($id)
				return $this->db->get_where('accounts', array('id' => $id))->result_array();
			else
				return $this->db->get_where('accounts', array('nickname' => $name))->result_array();
		}
		
		public function update($id, $rlname, $location, $about_me) {
			$this->db->update('accounts', array('rlname' => $rlname, 'location' => $location, 'about_me' => $about_me), array('id' => $id));
		}
		
		public function setAvatar($id, $image) {
			$this->db->update('accounts', array('avatar' => $image), array('id' => $id));
		}
		
		public function getFriends($id) {
			return $this->db->query("SELECT friends.friend, accounts.nickname, accounts.avatar FROM friends LEFT JOIN accounts ON accounts.id = friends.friend WHERE friends.active = 1 AND `with` = ".$this->db->escape($id)."")->result_array();
		}
		
		public function isFriend($id, $with) {
			return ($this->db->query("SELECT id FROM friends WHERE `with` = ".$this->db->escape($id)." AND friend = ".$this->db->escape($with)."")->num_rows == 0)? false:true;
		}
		
		public function exists($id) {
			return ($this->db->query("SELECT id FROM accounts WHERE id = ".$this->db->escape($id)."")->num_rows == 0)? false:true;
		}
		
		public function addFriend($id, $with) {
			global $CI;
			$data['with'] = $id;
			$data['friend'] = $with;
			$data['time'] = $_SERVER['REQUEST_TIME'];
			$data['active'] = 0;
			$this->db->insert('friends', $data);
			$data['with'] = $with;
			$data['friend'] = $id;
			$this->db->insert('friends', $data);
			$profile = $this->load($with, TRUE);
			$CI->load->model("msg_m", "msg");
			$text = "<a href='".url('profile/view/'.$profile[0]['nickname'])."'>".ucwords($profile[0]['nickname'])."</a> is inviting you to friendship. You can accept this invitation or just ingore it. It won't be showed in your friends list till you accept it. <br/><br/> <a href='".url('profile/accept/'.$with)."'>Accept</a> <br/><br/><hr/> <br/>This message was automatically generated by Modern AAC | Please do NOT respond to it.";
			$CI->msg->write($with, $id, "Friendship invitation", $text);
		}
		
		public function pendingInvitationExists($id, $with) {
			return ($this->db->query("SELECT id FROM friends WHERE `with` = ".$this->db->escape($id)." AND friend = ".$this->db->escape($with)." AND active = 0")->num_rows == 0)? false:true;
		}
		
		public function acceptFriendship($id, $with) {
			$this->db->query("UPDATE friends SET active = 1 WHERE `with` = ".$this->db->escape($id)." AND friend = ".$this->db->escape($with)."");
			$this->db->query("UPDATE friends SET active = 1 WHERE `with` = ".$this->db->escape($with)." AND friend = ".$this->db->escape($id)."");
		}
		
		public function removeFriend($id, $who) {
			$this->db->query("DELETE FROM friends WHERE `with` = ".$this->db->escape($id)." AND friend = ".$this->db->escape($who)."");
			$this->db->query("DELETE FROM friends WHERE `with` = ".$this->db->escape($who)." AND friend = ".$this->db->escape($id)."");
		}
		
		public function getVideos($id) {
			return $this->db->query("SELECT videos.title, videos.youtube, videos.time, videos.views, videos.id FROM videos LEFT JOIN players ON players.id = videos.author WHERE players.account_id = ".$this->db->escape($id)."")->result_array();
		}
		
		public function getLatestVideos() {
			return $this->db->query("SELECT videos.title, videos.youtube, videos.time, videos.views, videos.id FROM videos ORDER BY id DESC LIMIT 5")->result_array();
		}
		
		public function getLatestComments() {
			return $this->db->query("SELECT id, body, author, time FROM comments ORDER BY id DESC LIMIT 5")->result_array();
		}
		
	}
?>